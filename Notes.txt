Log 5:
	Added a canvas on the left Jpanel.
	Fixed some bugs related to the Jpanel location and removed the mouse liistener form the canvas-jpanel and inherited it to its child (canvas)

Log 6:
	Created a Sprite, Tile, Entity, Level class.
	Changed a bit of the game engine logic: I made the canvas attach a level to it .. and the level is the responsible for the rendering of all of its components (Entities and tiles)

Log 7:
	Rendered the level to the canvas..


Log 8:
	Done the rendering Tiles with the best i could and simplest way i figured.
	Fixed the rendering method in the level class and added a new level.png


Log 9:
	Creating Character and player classes.
	shifting the level to the left and top once the canvas is created .. so position (0,0) is the center of the things you see in the display.
	editing the shifting to be centered around the player once it is created. and Added a move method to the player. ( I have to edit the move function in the player and make it independent from the character class. coz it will make problems

Log 10:
	adding a collision detection function to the Level.java and making it perfect. Plus i changed the move function a bit (distrubiting the check collision on defirent axis.

Log 11:
	Added animation functioniality to the Player. which looks cool and precise.
		: I need to change the player to an animated player and make the user enter an array of sprites to the player.

Log 12:
	Added Projectile classes and projectile functionalities
	Added the shooting functionality (transforming the shooting coordinates into an angle then using the sin and cos to get the ratio of the angle -since always hypothunus = 1- so the cos and sin will give us the ratio of the angle)

Log 13:
	Added Particles with particle Wall collision physics. The particles are created by a class called ParticleCreator.
	Added a sprite constructor to make it available to create only color sprites.

Log 14:
	Added a Foe class which extends Character and is mostly like player class but does not have a mouse listener.
	Added a checkCollisionNPC() method to the Level class which will check all of the Foes collision when they reach a specific area and are visible.
	Player now can check collision with other NPCs!

Log 15:
	Added the collision detection to the particles to deflect from NPC.
	Added a dealDamage() method to the Charact class to make the characters taking damage by projectiles. It is called in the checkCollisionNPC() method
	Added some kind of particles explosion after a Foe is destroyed or removed.

Future Plan:
Done	Creating Sprite class to handle specific sprites, and maybe creating an independent Tile class which represents the sprite.
Done 	Creating a level class which allows you to create you own level design. The design can be taken from an image file.
Done 	Fixing the level rendering method and adding more functionality to it. Render Entity, for instance.
Done 	Adding collision physics and buffs for the Sprite classes. some sprite classes requires special collision detection methods.
Done	Creating an Entity class to represent the independent objects as player, projectiles and particles.
50%	Adding enemies and basic AI.
	Creating a Healthbar an enemies Healthbars.
	Creating different weapons ( 3 Weapons states ) which can be chosen from the R.H.S panel
	Creating a Mini-Map which will be a representation of the map.
	Creating more functionality:	
		1: creating random weapon on the map with different damages and rates of fire.
		2: creating a special weapon which consumes some energy. Therefore, and energy bar will be created under the main health Bar.

More to consider:
	